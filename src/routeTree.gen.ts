/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { ServerRoute as LoginGoogleIndexServerRouteImport } from './routes/login/google/index'
import { ServerRoute as LoginGoogleCallbackServerRouteImport } from './routes/login/google/callback'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginGoogleIndexServerRoute = LoginGoogleIndexServerRouteImport.update({
  id: '/login/google/',
  path: '/login/google/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const LoginGoogleCallbackServerRoute =
  LoginGoogleCallbackServerRouteImport.update({
    id: '/login/google/callback',
    path: '/login/google/callback',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login/': typeof LoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login'
  id: '__root__' | '/' | '/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/login/google/callback': typeof LoginGoogleCallbackServerRoute
  '/login/google': typeof LoginGoogleIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/login/google/callback': typeof LoginGoogleCallbackServerRoute
  '/login/google': typeof LoginGoogleIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/login/google/callback': typeof LoginGoogleCallbackServerRoute
  '/login/google/': typeof LoginGoogleIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/login/google/callback' | '/login/google'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/login/google/callback' | '/login/google'
  id: '__root__' | '/login/google/callback' | '/login/google/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  LoginGoogleCallbackServerRoute: typeof LoginGoogleCallbackServerRoute
  LoginGoogleIndexServerRoute: typeof LoginGoogleIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/login/google/': {
      id: '/login/google/'
      path: '/login/google'
      fullPath: '/login/google'
      preLoaderRoute: typeof LoginGoogleIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/login/google/callback': {
      id: '/login/google/callback'
      path: '/login/google/callback'
      fullPath: '/login/google/callback'
      preLoaderRoute: typeof LoginGoogleCallbackServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginIndexRoute: LoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  LoginGoogleCallbackServerRoute: LoginGoogleCallbackServerRoute,
  LoginGoogleIndexServerRoute: LoginGoogleIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
